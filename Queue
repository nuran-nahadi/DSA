#include <bits/stdc++.h>
using namespace std;
 

class Queue {
    int capacity;
public:
    int front, rear, size;
    
    vector <int> array;

    Queue(int cap)
    {   
        capacity = cap;
        front = size = 0;
 
        rear = capacity - 1;
        array.resize(capacity);
    }
 
bool isFull()
{
    return (size == capacity);
}
 

bool isEmpty()
{
    return (size == 0);
}

void enqueue(int item)
{
    if (isFull()){
    cout<<"Error: Queue Full!"<<endl;
        return;
    }
    rear = ++rear % capacity;
    array[rear] = item;
    size++;  
}
 
int dequeue()
{
    if (isEmpty())
        return INT_MIN;
    int item = array[front];
    front = ++front % capacity;
    size--;
    return item;
}
 
int frontElement()
{
    if (isEmpty()){
    cout<<"Queue Empty!"<<endl;
        return INT_MIN;
    }
    return array[front];
}

int rearElement()
{
    if (isEmpty()){
    cout<<"Queue Empty!"<<endl;
        return INT_MIN;
    }
    return array[rear];
}
void printQueue()
{
    if(front>rear){
    for (int i = front; i < capacity; i++)
    {
        cout<<array[i]<<endl;
    }
    for (int i = 0; i <= rear; i++)
    {
        cout<<array[i]<<endl;
    }
    }
    else
    for (int i = front; i <= rear; i++)
    {
        cout<<array[i]<<endl;
    }
}
}; 
